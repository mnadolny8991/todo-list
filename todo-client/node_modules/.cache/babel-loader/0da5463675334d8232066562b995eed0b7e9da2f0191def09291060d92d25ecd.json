{"ast":null,"code":"var _jsxFileName = \"/home/michal/web_dev/todo-list/src/List.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statuses = ['Planned', 'In Progress', 'Complete'];\nconst initialTasks = [{\n  id: 0,\n  description: 'Do the loundary',\n  due: new Date('2024-11-28T24:59:59Z'),\n  status: 'complete'\n}, {\n  id: 1,\n  description: 'Become software engineer',\n  due: new Date('2025-23-11T24:59:59Z'),\n  status: 'in progress'\n}, {\n  id: 2,\n  description: 'Finish your thesis',\n  due: new Date('2024-11-28T24:59:59Z'),\n  status: 'complete'\n}, {\n  id: 3,\n  description: 'Beat the world record',\n  due: new Date('2025-23-11T24:59:59Z'),\n  status: 'in progress'\n}, {\n  id: 4,\n  description: 'Become an educated genleman',\n  due: new Date('2025-23-11T24:59:59Z'),\n  status: 'planned'\n}, {\n  id: 5,\n  description: 'Start a new business',\n  due: new Date('2025-23-11T24:59:59Z'),\n  status: 'planned'\n}];\nfunction List() {\n  _s();\n  const [status, setStatus] = useState('planned');\n  const [tasks, setTasks] = useState(initialTasks);\n  function statusEntryClassNames(entry) {\n    return 'status__entry ' + (status === entry.toLowerCase() ? 'status__entry--selected' : '');\n  }\n  function handleStatusEntryClick(e) {\n    setStatus(String(e.target.innerHTML).toLowerCase());\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"status\",\n      children: statuses.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: statusEntryClassNames(s),\n        onClick: e => handleStatusEntryClick(e),\n        children: s\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tasks\",\n      children: tasks.map(t => t.status === status && /*#__PURE__*/_jsxDEV(Task, {\n        task: t\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"pTaw9uAbByPviiyHtKFyfRflyXU=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","Task","jsxDEV","_jsxDEV","statuses","initialTasks","id","description","due","Date","status","List","_s","setStatus","tasks","setTasks","statusEntryClassNames","entry","toLowerCase","handleStatusEntryClick","e","String","target","innerHTML","children","className","map","s","i","onClick","fileName","_jsxFileName","lineNumber","columnNumber","t","task","_c","$RefreshReg$"],"sources":["/home/michal/web_dev/todo-list/src/List.js"],"sourcesContent":["import { useState } from 'react';\nimport Task from './Task'\n\nconst statuses = ['Planned', 'In Progress', 'Complete'];\nconst initialTasks = [\n    {\n        id: 0,\n        description: 'Do the loundary',\n        due: new Date('2024-11-28T24:59:59Z'),\n        status: 'complete'\n    },\n    {\n        id: 1,\n        description: 'Become software engineer',\n        due: new Date('2025-23-11T24:59:59Z'),\n        status: 'in progress'\n    },\n    {\n        id: 2,\n        description: 'Finish your thesis',\n        due: new Date('2024-11-28T24:59:59Z'),\n        status: 'complete'\n    },\n    {\n        id: 3,\n        description: 'Beat the world record',\n        due: new Date('2025-23-11T24:59:59Z'),\n        status: 'in progress'\n    },\n    {\n        id: 4,\n        description: 'Become an educated genleman',\n        due: new Date('2025-23-11T24:59:59Z'),\n        status: 'planned'\n    },\n    {\n        id: 5,\n        description: 'Start a new business',\n        due: new Date('2025-23-11T24:59:59Z'),\n        status: 'planned'\n    }\n]\n\nfunction List() {\n    const [status, setStatus] = useState('planned');\n    const [tasks, setTasks] = useState(initialTasks);\n\n    function statusEntryClassNames(entry) {\n        return 'status__entry ' + \n            ((status === entry.toLowerCase()) ? 'status__entry--selected' : '');\n    }\n\n    function handleStatusEntryClick(e) {\n        setStatus(String(e.target.innerHTML).toLowerCase());\n    }\n\n    return (\n        <main>\n            <ul className='status'>\n                { statuses.map((s, i) => \n                    <li \n                        className={statusEntryClassNames(s)} \n                        key={i}\n                        onClick={e => handleStatusEntryClick(e)}>\n                        {s}\n                    </li>)\n                }\n            </ul>\n            <section className='tasks'>\n                { tasks.map(t => \n                    t.status === status && <Task key={t.id} task={t} />)\n                }\n            </section>\n        </main>\n    );\n}\n\nexport default List;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}