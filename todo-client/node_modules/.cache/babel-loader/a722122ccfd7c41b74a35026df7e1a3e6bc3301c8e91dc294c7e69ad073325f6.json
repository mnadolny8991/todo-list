{"ast":null,"code":"var _jsxFileName = \"/home/michal/web_dev/todo-list/src/List.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statuses = ['Planned', 'In Progress', 'Complete'];\nconst initialTasks = [{\n  id: 0,\n  description: 'Do the loundary',\n  due: new Date(2024, 2, 29, 23, 59, 59),\n  status: 'complete'\n}, {\n  id: 1,\n  description: 'Become software engineer',\n  due: new Date(2025, 5, 20, 22, 0, 0, 0),\n  status: 'in progress'\n}, {\n  id: 2,\n  description: 'Finish your thesis',\n  due: new Date(2026, 5, 20, 22, 0, 0, 0),\n  status: 'complete'\n}, {\n  id: 3,\n  description: 'Beat the world record',\n  due: new Date(2029, 5, 20, 22, 0, 0, 0),\n  status: 'in progress'\n}, {\n  id: 4,\n  description: 'Become an educated genleman',\n  due: new Date(2024, 5, 20, 22, 0, 0, 0),\n  status: 'planned'\n}, {\n  id: 5,\n  description: 'Start a new business',\n  due: new Date(2024, 5, 20, 22, 0, 0, 0),\n  status: 'planned'\n}];\nlet id = 6;\nfunction List() {\n  _s();\n  const [status, setStatus] = useState('planned');\n  const [tasks, setTasks] = useState(initialTasks);\n  const [inputTask, setInputTask] = useState({\n    status: 'planned'\n  });\n  function statusEntryClassNames(entry) {\n    return 'status__entry ' + (status === entry.toLowerCase() ? 'status__entry--selected' : '');\n  }\n  function handleStatusEntryClick(e) {\n    setStatus(String(e.target.innerHTML).toLowerCase());\n  }\n  function handleRightClick(e, id) {\n    setTasks(tasks.map(t => {\n      if (t.id === id) {\n        let newStatus = '';\n        if (t.status === 'planned') newStatus = 'in progress';else if (t.status === 'in progress') newStatus = 'complete';\n        setStatus(newStatus);\n        return {\n          ...t,\n          status: newStatus\n        };\n      }\n      return t;\n    }));\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    setTasks([...tasks, {\n      ...inputTask,\n      id: id++\n    }]);\n    setStatus('planned');\n  }\n  function handleDateChange(e) {\n    const val = String(e.target.value);\n    const date = val.split('-');\n    let newDate = new Date(inputTask.due);\n    newDate.setFullYear(date[0]);\n    newDate.setMonth(date[1]);\n    newDate.setDate(date[2]);\n    setInputTask({\n      ...inputTask,\n      due: newDate\n    });\n  }\n  function handleTimeChange(e) {\n    const val = String(e.target.value);\n    const time = val.split(':');\n    let newDate = new Date(inputTask.due);\n    newDate.setHours(time[0], time[1]);\n    setInputTask({\n      ...inputTask,\n      due: newDate\n    });\n  }\n  function handleDescChange(e) {\n    const val = String(e.target.value);\n    setInputTask({\n      ...inputTask,\n      description: val\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"status container\",\n      children: statuses.map((s, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: statusEntryClassNames(s),\n        onClick: e => handleStatusEntryClick(e),\n        children: s\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tasks container\",\n      children: tasks.map(t => t.status === status && /*#__PURE__*/_jsxDEV(Task, {\n        task: t,\n        onTaskClick: handleRightClick\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onDateChange: handleDateChange,\n      onDescChange: handleDescChange,\n      on: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(List, \"sPdbLBUhltSVa48NWQhIKosOuTg=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["useState","Task","TaskForm","jsxDEV","_jsxDEV","statuses","initialTasks","id","description","due","Date","status","List","_s","setStatus","tasks","setTasks","inputTask","setInputTask","statusEntryClassNames","entry","toLowerCase","handleStatusEntryClick","e","String","target","innerHTML","handleRightClick","map","t","newStatus","handleSubmit","preventDefault","handleDateChange","val","value","date","split","newDate","setFullYear","setMonth","setDate","handleTimeChange","time","setHours","handleDescChange","children","className","s","i","onClick","fileName","_jsxFileName","lineNumber","columnNumber","task","onTaskClick","onDateChange","onDescChange","on","_c","$RefreshReg$"],"sources":["/home/michal/web_dev/todo-list/src/List.js"],"sourcesContent":["import { useState } from 'react';\nimport Task from './Task';\nimport TaskForm from './TaskForm';\n\nconst statuses = ['Planned', 'In Progress', 'Complete'];\nconst initialTasks = [\n    {\n        id: 0,\n        description: 'Do the loundary',\n        due: new Date(2024, 2, 29, 23, 59, 59),\n        status: 'complete'\n    },\n    {\n        id: 1,\n        description: 'Become software engineer',\n        due: new Date(2025, 5, 20, 22, 0, 0, 0),\n        status: 'in progress'\n    },\n    {\n        id: 2,\n        description: 'Finish your thesis',\n        due: new Date(2026, 5, 20, 22, 0, 0, 0),\n        status: 'complete'\n    },\n    {\n        id: 3,\n        description: 'Beat the world record',\n        due: new Date(2029, 5, 20, 22, 0, 0, 0),\n        status: 'in progress'\n    },\n    {\n        id: 4,\n        description: 'Become an educated genleman',\n        due: new Date(2024, 5, 20, 22, 0, 0, 0),\n        status: 'planned'\n    },\n    {\n        id: 5,\n        description: 'Start a new business',\n        due: new Date(2024, 5, 20, 22, 0, 0, 0),\n        status: 'planned'\n    }\n]\n\nlet id = 6; \n\nfunction List() {\n    const [status, setStatus] = useState('planned');\n    const [tasks, setTasks] = useState(initialTasks);\n\n    const [inputTask, setInputTask] = useState({ status: 'planned' });\n\n    function statusEntryClassNames(entry) {\n        return 'status__entry ' + \n            ((status === entry.toLowerCase()) ? 'status__entry--selected' : '');\n    }\n\n    function handleStatusEntryClick(e) {\n        setStatus(String(e.target.innerHTML).toLowerCase());\n    }\n\n    function handleRightClick(e, id) {\n        setTasks(tasks.map(t => {\n            if (t.id === id) {\n                let newStatus = ''\n                if (t.status === 'planned') newStatus = 'in progress';\n                else if (t.status === 'in progress') newStatus = 'complete';\n                setStatus(newStatus);\n                return { ...t, status: newStatus };\n            }\n            return t;\n        }));\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setTasks([...tasks, {...inputTask, id: id++}]);\n        setStatus('planned');\n    }\n\n    function handleDateChange(e) {\n        const val = String(e.target.value);\n        const date = val.split('-');\n        let newDate = new Date(inputTask.due);\n        newDate.setFullYear(date[0]);\n        newDate.setMonth(date[1]);\n        newDate.setDate(date[2]);\n        setInputTask({ ...inputTask, due: newDate })\n    }\n\n    function handleTimeChange(e) {\n        const val = String(e.target.value);\n        const time = val.split(':');\n        let newDate = new Date(inputTask.due);\n        newDate.setHours(time[0], time[1]);\n        setInputTask({ ...inputTask, due: newDate });\n    }\n\n    function handleDescChange(e) {\n        const val = String(e.target.value);\n        setInputTask({ ...inputTask, description: val })\n    }\n\n    return (\n        <main>\n            <ul className='status container'>\n                { statuses.map((s, i) => \n                    <li \n                        className={statusEntryClassNames(s)} \n                        key={i}\n                        onClick={e => handleStatusEntryClick(e)}>\n                        {s}\n                    </li>)\n                }\n            </ul>\n            <section className='tasks container'>\n                { tasks.map(t => \n                    t.status === status && <Task key={t.id} task={t} onTaskClick={handleRightClick} />)\n                }\n            </section>\n            {/* <form className='task-form container' onSubmit={e => handleSubmit(e)}>\n                <div className='task-form__left'>\n                    <input className='task-form__item' name='description'\n                        onChange={e => handleDescChange(e)} type='text' required></input>\n                    <div className='task-form__datetime'>\n                        <input className='task-form__item' name='date'\n                            onChange={e => handleDateChange(e)} type='date' required></input>\n                        <input className='task-form__item' name='time'\n                            onChange={e => handleTimeChange(e)} type='time' required></input>\n                    </div>\n                </div>\n                <button className='task-form__submit' type='submit'>\n                    <img src={add} alt='a' width='20px'></img>\n                </button>\n            </form> */} \n            <TaskForm \n                onDateChange={handleDateChange}\n                onDescChange={handleDescChange}\n                on\n            />\n        </main>\n    );\n}\n\nexport default List;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,UAAU,CAAC;AACvD,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,iBAAiB;EAC9BC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACtCC,MAAM,EAAE;AACZ,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,0BAA0B;EACvCC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCC,MAAM,EAAE;AACZ,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,oBAAoB;EACjCC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCC,MAAM,EAAE;AACZ,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,uBAAuB;EACpCC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCC,MAAM,EAAE;AACZ,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,6BAA6B;EAC1CC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCC,MAAM,EAAE;AACZ,CAAC,EACD;EACIJ,EAAE,EAAE,CAAC;EACLC,WAAW,EAAE,sBAAsB;EACnCC,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvCC,MAAM,EAAE;AACZ,CAAC,CACJ;AAED,IAAIJ,EAAE,GAAG,CAAC;AAEV,SAASK,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACF,MAAM,EAAEG,SAAS,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACM,YAAY,CAAC;EAEhD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC;IAAEW,MAAM,EAAE;EAAU,CAAC,CAAC;EAEjE,SAASQ,qBAAqBA,CAACC,KAAK,EAAE;IAClC,OAAO,gBAAgB,IACjBT,MAAM,KAAKS,KAAK,CAACC,WAAW,CAAC,CAAC,GAAI,yBAAyB,GAAG,EAAE,CAAC;EAC3E;EAEA,SAASC,sBAAsBA,CAACC,CAAC,EAAE;IAC/BT,SAAS,CAACU,MAAM,CAACD,CAAC,CAACE,MAAM,CAACC,SAAS,CAAC,CAACL,WAAW,CAAC,CAAC,CAAC;EACvD;EAEA,SAASM,gBAAgBA,CAACJ,CAAC,EAAEhB,EAAE,EAAE;IAC7BS,QAAQ,CAACD,KAAK,CAACa,GAAG,CAACC,CAAC,IAAI;MACpB,IAAIA,CAAC,CAACtB,EAAE,KAAKA,EAAE,EAAE;QACb,IAAIuB,SAAS,GAAG,EAAE;QAClB,IAAID,CAAC,CAAClB,MAAM,KAAK,SAAS,EAAEmB,SAAS,GAAG,aAAa,CAAC,KACjD,IAAID,CAAC,CAAClB,MAAM,KAAK,aAAa,EAAEmB,SAAS,GAAG,UAAU;QAC3DhB,SAAS,CAACgB,SAAS,CAAC;QACpB,OAAO;UAAE,GAAGD,CAAC;UAAElB,MAAM,EAAEmB;QAAU,CAAC;MACtC;MACA,OAAOD,CAAC;IACZ,CAAC,CAAC,CAAC;EACP;EAEA,SAASE,YAAYA,CAACR,CAAC,EAAE;IACrBA,CAAC,CAACS,cAAc,CAAC,CAAC;IAClBhB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAC,GAAGE,SAAS;MAAEV,EAAE,EAAEA,EAAE;IAAE,CAAC,CAAC,CAAC;IAC9CO,SAAS,CAAC,SAAS,CAAC;EACxB;EAEA,SAASmB,gBAAgBA,CAACV,CAAC,EAAE;IACzB,MAAMW,GAAG,GAAGV,MAAM,CAACD,CAAC,CAACE,MAAM,CAACU,KAAK,CAAC;IAClC,MAAMC,IAAI,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIC,OAAO,GAAG,IAAI5B,IAAI,CAACO,SAAS,CAACR,GAAG,CAAC;IACrC6B,OAAO,CAACC,WAAW,CAACH,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5BE,OAAO,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;IACzBE,OAAO,CAACG,OAAO,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;IACxBlB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAER,GAAG,EAAE6B;IAAQ,CAAC,CAAC;EAChD;EAEA,SAASI,gBAAgBA,CAACnB,CAAC,EAAE;IACzB,MAAMW,GAAG,GAAGV,MAAM,CAACD,CAAC,CAACE,MAAM,CAACU,KAAK,CAAC;IAClC,MAAMQ,IAAI,GAAGT,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAIC,OAAO,GAAG,IAAI5B,IAAI,CAACO,SAAS,CAACR,GAAG,CAAC;IACrC6B,OAAO,CAACM,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;IAClCzB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAER,GAAG,EAAE6B;IAAQ,CAAC,CAAC;EAChD;EAEA,SAASO,gBAAgBA,CAACtB,CAAC,EAAE;IACzB,MAAMW,GAAG,GAAGV,MAAM,CAACD,CAAC,CAACE,MAAM,CAACU,KAAK,CAAC;IAClCjB,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAET,WAAW,EAAE0B;IAAI,CAAC,CAAC;EACpD;EAEA,oBACI9B,OAAA;IAAA0C,QAAA,gBACI1C,OAAA;MAAI2C,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAC1BzC,QAAQ,CAACuB,GAAG,CAAC,CAACoB,CAAC,EAAEC,CAAC,kBAChB7C,OAAA;QACI2C,SAAS,EAAE5B,qBAAqB,CAAC6B,CAAC,CAAE;QAEpCE,OAAO,EAAE3B,CAAC,IAAID,sBAAsB,CAACC,CAAC,CAAE;QAAAuB,QAAA,EACvCE;MAAC,GAFGC,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC,eACLlD,OAAA;MAAS2C,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC9B/B,KAAK,CAACa,GAAG,CAACC,CAAC,IACTA,CAAC,CAAClB,MAAM,KAAKA,MAAM,iBAAIP,OAAA,CAACH,IAAI;QAAYsD,IAAI,EAAE1B,CAAE;QAAC2B,WAAW,EAAE7B;MAAiB,GAA7CE,CAAC,CAACtB,EAAE;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElF,CAAC,eAgBVlD,OAAA,CAACF,QAAQ;MACLuD,YAAY,EAAExB,gBAAiB;MAC/ByB,YAAY,EAAEb,gBAAiB;MAC/Bc,EAAE;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf;AAACzC,EAAA,CAhGQD,IAAI;AAAAgD,EAAA,GAAJhD,IAAI;AAkGb,eAAeA,IAAI;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}